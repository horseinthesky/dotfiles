#: The value of the TERM environment variable to set. Changing this
#: can break many terminal programs, only change it if you know what
#: you are doing, not because you read some advice on Stack Overflow
#: to change it. The TERM variable is used by various programs to get
#: information about the capabilities and behavior of the terminal. If
#: you change it, depending on what programs you run, and how
#: different the terminal you are changing it to is, various things
#: from key-presses, to colors, to various advanced features may not
#: work. Changing this option by reloading the config will only affect
#: newly created windows.
# term xterm-kitty

#: Enable shell integration on supported shells. This enables features
#: such as jumping to previous prompts, browsing the output of the
#: previous command in a pager, etc. on supported shells.  Set to
#: ``disabled`` to turn off shell integration, completely. See
#: https://sw.kovidgoyal.net/kitty/shell-integration/ for details.
shell_integration no-cursor

#: The shell program to execute. The default value of . means to use
#: whatever shell is set as the default shell for the current user.
#: Note that on macOS if you change this, you might need to add
#: --login and --interactive to ensure that the shell starts in
#: interactive mode and reads its startup rc files.
# shell .

#: The terminal editor (such as ``vim`` or ``nano``) to use when
#: editing the kitty config file or similar tasks.
#: The default value of . means to use the environment variables
#: VISUAL and EDITOR in that order. If these variables aren't set,
#: kitty will run your shell (``$SHELL -l -i -c env``) to see if your
#: shell config files set VISUAL or EDITOR. If that doesn't work,
#: kitty will cycle through various known editors (``vim``, ``emacs``,
#: etc) and take the first one that exists on your system.
# editor .

#: Close the window when the child process (shell) exits. If no (the
#: default), the terminal will remain open when the child exits as
#: long as there are still processes outputting to the terminal (for
#: example disowned or backgrounded processes). If yes, the window
#: will close as soon as the child process exits. Note that setting it
#: to yes means that any background processes still using the terminal
#: can fail silently because their stdout/stderr/stdin no longer work.
# close_on_child_death no

#: Specify environment variables to set in all child processes. Note
#: that environment variables are expanded recursively, so if you
#: use::

#:     env MYVAR1=a
#:     env MYVAR2=${MYVAR1}/${HOME}/b

#: The value of MYVAR2 will be a/<path to home directory>/b. Using
#: VAR= will set it to the empty string and using just VAR will delete
#: the variable from the child process' environment.
# env

#: Process hyperlink (OSC 8) escape sequences. If disabled OSC 8
#: escape sequences are ignored. Otherwise they become clickable
#: links, that you can click by with the mouse or the hints kitten
#: </kittens/hints>. The special value of ``ask`` means that kitty
#: will ask before opening the link when clicked.
# allow_hyperlinks yes

#: Path to python file which will be loaded for
#: https://sw.kovidgoyal.net/kitty/launch/#watchers. Can be specified
#: more than once to load multiple watchers. The watchers will be
#: added to every kitty window. Relative paths are resolved relative
#: to the kitty config directory. Note that reloading the config will
#: only affect windows created after the reload.
# watcher

#: Control where kitty looks to find programs to run. The default
#: search order is: First search the system wide PATH, then
#: ~/.local/bin and ~/bin. If not still not found, the PATH defined in
#: the login shell after sourcing all its startup files is tried.
#: Finally, if present, the PATH in the env option is tried.
#: This option allows you to prepend, append, or remove paths from
#: this search order. It can be specified multiple times for multiple
#: paths. A simple path will be prepended to the search order. A path
#: that starts with the + sign will be append to the search order,
#: after ~/bin above. A path that starts with the - sign will be
#: removed from the entire search order. For example::
#:     exe_search_path /some/prepended/path
#:     exe_search_path +/some/appended/path
#:     exe_search_path -/some/excluded/path
# exe_search_path

#: Periodically check if an update to kitty is available. If an update
#: is found a system notification is displayed informing you of the
#: available update. The default is to check every 24 hrs, set to zero
#: to disable. Changing this option by reloading the config is not
#: supported.
# update_check_interval 24

#: Path to a session file to use for all kitty instances. Can be
#: overridden by using the kitty --session command line option for
#: individual instances. See
#: https://sw.kovidgoyal.net/kitty/overview/#startup-sessions in the
#: kitty documentation for details. Note that relative paths are
#: interpreted with respect to the kitty config directory. Environment
#: variables in the path are expanded. Changing this option by
#: reloading the config is not supported.
# startup_session none

#: Allow programs running in kitty to read and write from the
#: clipboard. You can control exactly which actions are allowed. The
#: set of possible actions is: write-clipboard read-clipboard write-
#: primary read-primary read-clipboard-ask read-primary-ask. The
#: default is to allow writing to the clipboard and primary selection
#: and to ask for permission when a program tries to read from the
#: clipboard. Note that disabling the read confirmation is a security
#: risk as it means that any program, even one running on a remote
#: server via SSH can read your clipboard. See also
#: clipboard_max_size.
# clipboard_control write-clipboard write-primary read-clipboard-ask read-primary-ask

#: The maximum size (in MB) of data from programs running in kitty
#: that will be stored for writing to the system clipboard. See also
#: clipboard_control. A value of zero means no size limit is applied.
# clipboard_max_size 64

#: A password, that can be supplied to the file transfer kitten to
#: skip the transfer confirmation prompt. This should only be used
#: when initiating transfers from trusted computers, over trusted
#: networks or encrypted transports, as it allows programs running on
#: the remote machine to read/write to the local filesystem, without
#: permission.
# file_transfer_confirmation_bypass
