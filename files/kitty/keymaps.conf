#: You can have kitty remove all shortcut definition seen up to this
#: point. Useful, for instance, to remove the default shortcuts.
# clear_all_shortcuts no

#: The value of kitty_mod is used as the modifier for all default
#: shortcuts (map kitty_mod+n new_os_window), you can change itin
#: your kitty.conf to change the modifiers for all the default shortcuts.
# kitty_mod ctrl+shift

#: Open the kitty command shell
#::  Open the kitty shell in a new window/tab/overlay/os_window to
#::  control kitty using commands.
map kitty_mod+escape kitty_shell window

#: Edit config file
map kitty_mode+f2 edit_config_file

#: Reload kitty.conf
#::  Reload kitty.conf, applying any changes since the last time it
#::  was loaded. Note that a handful of settings cannot be dynamically
#::  changed and require a full restart of kitty.  You can also map a
#::  keybinding to load a different config file, for example::
#::      map f5 load_config /path/to/alternative/kitty.conf
#::
#::  Note that all setting from the original kitty.conf are discarded,
#::  in other words the new conf settings *replace* the old ones.
map kitty_mod+r load_config_file
# map ctrl+cmd+,   load_config_file

#: Debug kitty configuration
#::  Show details about exactly what configuration kitty is running
#::  with and its host environment. Useful for debugging issues.
map kitty_mod+f6 debug_config
# map opt+cmd+,    debug_config

#: Disable mapping
map f12 discard_event

#: Toggle fullscreen
map kitty_mod+f11 toggle_fullscreen

#: Toggle maximized
map kitty_mod+f10 toggle_maximized

#: Fizzy search on tab
map ctrl+shift+f launch --type=overlay --stdin-source=@screen_scrollback fzf --no-sort --no-mouse --exact -i --tac

#: Increase background opacity
# map kitty_mod+a>m set_background_opacity +0.1

#: Decrease background opacity
# map kitty_mod+a>l set_background_opacity -0.1

#: Make background fully opaque
# map kitty_mod+a>1 set_background_opacity 1

#: Reset background opacity
# map kitty_mod+a>d set_background_opacity default

#::  You can create shortcuts to clear/reset the terminal. For
#::  example::
#::      # Reset the terminal
#::      map kitty_mod+f9 clear_terminal reset active
#::      # Clear the terminal screen by erasing all contents
#::      map kitty_mod+f10 clear_terminal clear active
#::      # Clear the terminal scrollback by erasing it
#::      map kitty_mod+f11 clear_terminal scrollback active
#::      # Scroll the contents of the screen into the scrollback
#::      map kitty_mod+f12 clear_terminal scroll active

#::  If you want to operate on all windows instead of just the current
#::  one, use all instead of active.

#::  It is also possible to remap Ctrl+L to both scroll the current
#::  screen contents into the scrollback buffer and clear the screen,
#::  instead of just clearing the screen, for example, for ZSH add the
#::  following to ~/.zshrc:
#::  .. code-block:: sh
#::      scroll-and-clear-screen() {
#::          printf '\n%.0s' {1..$LINES}
#::          zle clear-screen
#::      }
#::      zle -N scroll-and-clear-screen
#::      bindkey '^l' scroll-and-clear-screen
map kitty_mod+delete clear_terminal reset active

#: ====Font sizes
#: You can change the font size for all top-level kitty OS windows at
#: a time or only the current one.

#: Increase font size
# map kitty_mod+equal  change_font_size all +2.0
# map kitty_mod+plus   change_font_size all +2.0
# map kitty_mod+kp_add change_font_size all +2.0
# map cmd+plus         change_font_size all +2.0
# map cmd+equal        change_font_size all +2.0
# map shift+cmd+equal  change_font_size all +2.0

#: Decrease font size
# map kitty_mod+minus       change_font_size all -2.0
# map kitty_mod+kp_subtract change_font_size all -2.0
# map cmd+minus             change_font_size all -2.0
# map shift+cmd+minus       change_font_size all -2.0

#: Reset font size
# map kitty_mod+backspace change_font_size all 0
# map cmd+0               change_font_size all 0


#: To setup shortcuts for specific font sizes::
#:     map kitty_mod+f6 change_font_size all 10.0

#: To setup shortcuts to change only the current OS window's font
#: size::
#:     map kitty_mod+f6 change_font_size current 10.0
map ctrl+minus change_font_size current -2.0
map ctrl+equal change_font_size current +2.0
map ctrl+0 change_font_size current 0

#: ====Clipboard
#: Copy to clipboard
#::  There is also a copy_or_interrupt action that can be optionally
#::  mapped to Ctrl+c. It will copy only if there is a selection and
#::  send an interrupt otherwise. Similarly,
#::  copy_and_clear_or_interrupt will copy and clear the selection or
#::  send an interrupt if there is no selection.
map kitty_mod+c copy_to_clipboard

#: Paste from clipboard
map kitty_mod+v paste_from_clipboard

#: ====Tab management
#: Next tab
# map kitty_mod+right next_tab
# map shift+cmd+]     next_tab
# map ctrl+tab        next_tab

#: Previous tab
# map kitty_mod+left previous_tab
# map shift+cmd+[    previous_tab
# map ctrl+shift+tab previous_tab

#: New tab
# map kitty_mod+t new_tab
# map cmd+t       new_tab

#: Close tab
# map kitty_mod+q close_tab
# map cmd+w       close_tab

#: Move tab forward
map kitty_mod+l move_tab_forward

#: Move tab backward
map kitty_mod+h move_tab_backward

#: Set tab title
map kitty_mod+alt+t set_tab_title
# map shift+cmd+i     set_tab_title

#: You can also create shortcuts to go to specific tabs, with 1 being
#: the first tab, 2 the second tab and -1 being the previously active
#: tab, and any number larger than the last tab being the last tab::
#:     map ctrl+alt+1 goto_tab 1
#:     map ctrl+alt+2 goto_tab 2

#: Just as with new_window above, you can also pass the name of
#: arbitrary commands to run when using new_tab and use
#: new_tab_with_cwd. Finally, if you want the new tab to open next to
#: the current tab rather than at the end of the tabs list, use::
#:     map ctrl+t new_tab !neighbor [optional cmd to run]
