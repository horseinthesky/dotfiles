# Installation
- name: Check if NVIM installed
  command: which nvim
  register: nvim_check
  failed_when: nvim_check.rc > 1
  changed_when: nvim_check.rc == 1

- name: Install required debian packages
  import_tasks: debian.yml
  when: >
    ansible_os_family == "Debian" and
    nvim_check.rc == 1

- name: Install required arch packages
  import_tasks: arch.yml
  when: >
    ansible_os_family == "Archlinux" and
    nvim_check.rc == 1

- name: Makes sure autoload directory exists
  file:
    path: "{{ user_home }}/.local/share/nvim/site/autoload"
    state: directory
  when: nvim_check.rc == 1

- name: Install vim-plug
  get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: "{{ user_home }}/.local/share/nvim/site/autoload/plug.vim"
  when: nvim_check.rc == 1

- name: Check if vimrc exists
  stat:
    path: "{{ user_home }}/.config/nvim/init.vim"
  register: vimrc_stat
  failed_when: False

- name: Backup vimrc
  command: mv ~/.config/nvim/init.vim ~/init.vim.bak
  args:
    creates: "{{ user_home }}/init.vim.bak"
  when: vimrc_stat.stat.exists

- name: Creates .config/nvim dir
  file:
    path: "{{ user_home }}/.config/nvim"
    state: directory

- name: Symlink coc-settings
  file:
    src: "{{ dotfiles_home }}/coc-settings.json"
    dest: "{{ user_home }}/.config/nvim/coc-settings.json"
    state: link

- name: Symlink init.vim
  file:
    src: "{{ dotfiles_home }}/init.vim"
    dest: "{{ user_home }}/.config/nvim/init.vim"
    state: link

- name: Symlink lua
  file:
    src: "{{ dotfiles_home }}/lua"
    dest: "{{ user_home }}/.config/nvim/lua"
    state: link

- name: Symlink snippets
  file:
    src: "{{ dotfiles_home }}/UltiSnips"
    dest: "{{ user_home }}/.config/nvim/UltiSnips"
    state: link

- name: Install plugins
  command: nvim +':silent PlugInstall' +qa
  when: nvim_check.rc == 1
